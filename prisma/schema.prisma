datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model users {
  id        Int      @id @default(autoincrement())
  password  String
  name      String
  status    String   @default("pending") @map("status")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @map("updated_at")

  admins    admins[]
  clients   clients[]
}

model admins {
  id          Int      @id @default(autoincrement())
  email       String   @unique
  permissions String[] @default([]) @map("permissions")
  status      String   @default("pending") @map("status")
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @default(now()) @map("updated_at")

  userId      Int      @map("user_id")
  user        users    @relation(fields: [userId], references: [id])
}

model clients {
  id             Int              @id @default(autoincrement())
  phone          String           @unique
  preferences    String[]         @default([]) @map("preferences")
  status         String           @default("pending") @map("status")
  createdAt      DateTime         @default(now()) @map("created_at")
  updatedAt      DateTime         @default(now()) @map("updated_at")

  userId         Int              @map("user_id")
  user           users            @relation(fields: [userId], references: [id])

  addressClients addressClients[]
  commands       commands[]
}

model addressClients {
  id        Int      @id @default(autoincrement())
  address   String
  status    String   @default("pending") @map("status")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @map("updated_at")

  clientId  Int      @map("client_id")
  client    clients  @relation(fields: [clientId], references: [id])
}

model types {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  status    String   @default("pending") @map("status")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @map("updated_at")

  articles articles[]
}

model categories {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  status    String   @default("pending") @map("status")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @map("updated_at")

  articles articles[]
}

model articles {
  id           Int            @id @default(autoincrement())
  name         String         @unique
  price        Float
  description  String
  image        String         @unique
  status       String         @default("pending") @map("status")
  createdAt    DateTime       @default(now()) @map("created_at")
  updatedAt    DateTime       @default(now()) @map("updated_at")

  typeId       Int            @map("type_id")
  categoryId   Int            @default(0) @map("category_id")
  type         types          @relation(fields: [typeId], references: [id])
  category     categories     @relation(fields: [categoryId], references: [id])

  menuArticles menuArticles[]
  articleTags  articleTags[]
}

model tags {
  id        Int      @id @default(autoincrement())
  name      String   @unique
  status    String   @default("pending") @map("status")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @map("updated_at")

  articleTags articleTags[]
}

model articleTags {
  id        Int      @id @default(autoincrement())
  status    String   @default("pending") @map("status")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @map("updated_at")

  articleId Int      @map("article_id")
  tagId     Int      @map("tag_id")
  article   articles @relation(fields: [articleId], references: [id])
  tag       tags     @relation(fields: [tagId], references: [id])
}

model commands {
  id                  Int                   @id @default(autoincrement())
  weeks               Int
  checkedDays         String[]
  startDate           DateTime
  address             String
  status              String                @default("pending") @map("status")
  createdAt           DateTime              @default(now()) @map("created_at")
  updatedAt           DateTime              @default(now()) @map("updated_at")

  clientId            Int                   @map("client_id")
  client              clients               @relation(fields: [clientId], references: [id])

  menus               menus[]
  commandTransactions commandTransactions[]
}

model menus {
  id           Int            @id @default(autoincrement())
  status       String         @default("pending") @map("status")
  createdAt    DateTime       @default(now()) @map("created_at")
  updatedAt    DateTime       @default(now()) @map("updated_at")

  commandId    Int            @map("command_id")
  command      commands       @relation(fields: [commandId], references: [id])

  menuArticles menuArticles[]
}

model menuArticles {
  id             Int              @id @default(autoincrement())
  status         String           @default("pending") @map("status")
  createdAt      DateTime         @default(now()) @map("created_at")
  updatedAt      DateTime         @default(now()) @map("updated_at")

  articleId      Int              @map("article_id")
  menuId         Int              @map("menu_id")
  menu           menus            @relation(fields: [menuId], references: [id])
  article        articles         @relation(fields: [articleId], references: [id])

  planningEvents planningEvents[]
}

model planningEvents {
  id            Int          @id @default(autoincrement())
  count         Int
  date          String
  slot          String
  status        String       @default("pending") @map("status")
  createdAt     DateTime     @default(now()) @map("created_at")
  updatedAt     DateTime     @default(now()) @map("updated_at")

  menuArticleId Int          @map("menu_article_id")
  menuArticle   menuArticles @relation(fields: [menuArticleId], references: [id])
}

model commandTransactions {
  id        Int      @id @default(autoincrement())
  subtotal  Float
  shipping  Float
  tax       Float
  total     Float
  type      String   @default("payment") @map("type")
  promoCode String?
  status    String   @default("pending") @map("status")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @map("updated_at")

  commandId Int      @map("command_id")
  command   commands @relation(fields: [commandId], references: [id])
}
