datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
  output = "./generated"
}

model users {
  id    Int   @id @default(autoincrement())
  password String
  name  String 
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @map("updated_at")
}
model admins {
  id    Int     @id @default(autoincrement())
  userId String @map("user_id")
  email String  @unique
  permissions String[] @default([]) @map("permissions")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @map("updated_at")
}
model clients {
  id    Int     @id @default(autoincrement())
  userId String @map("user_id")
  phone String @unique
  preferences String[] @default([]) @map("preferences")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @map("updated_at")
}
model addressClients {
  id    Int     @id @default(autoincrement())
  userId String @map("user_id")
  address String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @map("updated_at")
}
model articles {
  id        Int   @id @default(autoincrement())
  name      String
  price     Float
  description String
  image String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @map("updated_at")
}
model articleTags {
  id        Int   @id @default(autoincrement())
  articleId String @map("article_id")
  tagId String @map("tag_id")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @map("updated_at")
}
model articleTypes {
  id        Int   @id @default(autoincrement())
  articleId String @map("article_id")
  typeId String @map("type_id")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @map("updated_at")
}
model articleCategories {
  id        Int   @id @default(autoincrement())
  articleId String @map("article_id")
  categoryId String @map("category_id")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @map("updated_at")
}
model tags {
  id        Int   @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @map("updated_at")
}
model types {
  id        Int   @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @map("updated_at")
}
model categories {
  id        Int   @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @map("updated_at")
}
model commands {
  id        Int   @id @default(autoincrement())
  weeks Int
  checkedDays String[]
  startDate DateTime
  userId String @map("user_id")
  address String
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @map("updated_at")
  status String @default("pending") @map("status")
}
model menus {
  id        Int   @id @default(autoincrement())
  commandId String @map("command_id")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @map("updated_at")
}
model menuArticles {
  id        Int   @id @default(autoincrement())
  articleId String @map("article_id")
  menuId String @map("menu_id")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @map("updated_at")
}
model planningEvents {
  id        Int   @id @default(autoincrement())
  menuArticleId String @map("menu_article_id")
  count Int
  date String
  slot String
  status String @default("pending") @map("status")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @map("updated_at")
}
model commandTransactions {
  id        Int   @id @default(autoincrement())
  commandId String @map("command_id")
  subtotal Float
  shipping Float
  tax Float
  total Float
  type String @default("payment") @map("type")
  promoCode String?
  status String @default("pending") @map("status")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @default(now()) @map("updated_at")
}
